import Api from './api';
import { Buy } from './api/restful/buy';
import { Commerce } from './api/restful/commerce';
import { Developer } from './api/restful/developer';
import { PostOrder } from './api/restful/postOrder';
import { Sell } from './api/restful/sell';
import AuthNAuth from './auth/authNAuth';
import OAuth2 from './auth/oAuth2';
import { ContentLanguage, Locale, MarketplaceId, SiteId } from './enums';
import { IEBayApiRequest } from './request';
import { AppConfig, ClientAlerts, Finding, Merchandising, Shopping, Trading } from './types';
declare class eBayApi extends Api {
    static default: typeof eBayApi;
    static SiteId: typeof SiteId;
    static MarketplaceId: typeof MarketplaceId;
    static ContentLanguage: typeof ContentLanguage;
    static Locale: typeof Locale;
    /**
     * Loads config from `process.env`
     *
     * @return {eBayApi} a new eBayApi instance
     * @param {request} req request
     * @throws {ApiEnvError}
     */
    static fromEnv(req?: IEBayApiRequest): eBayApi;
    readonly authNAuth: AuthNAuth;
    readonly oAuth2: OAuth2;
    readonly OAuth2: OAuth2;
    private readonly factory;
    private _buy?;
    private _commerce?;
    private _developer?;
    private _postOrder?;
    private _sell?;
    private _trading?;
    private _finding?;
    private _shopping?;
    private _clientAlerts?;
    private _merchandising?;
    /**
     * @param {AppConfig} config the app config
     * @param {IEBayApiRequest} req the request
     */
    constructor(config: AppConfig, req?: IEBayApiRequest);
    get buy(): Buy;
    get commerce(): Commerce;
    get developer(): Developer;
    get postOrder(): PostOrder;
    get sell(): Sell;
    get trading(): Trading;
    get finding(): Finding;
    get shopping(): Shopping;
    get clientAlerts(): ClientAlerts;
    get merchandising(): Merchandising;
}
export = eBayApi;
