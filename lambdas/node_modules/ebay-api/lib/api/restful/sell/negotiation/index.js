"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = __importDefault(require("../../"));
/**
 * The <b>Negotiations API</b> gives sellers the ability to proactively send discount offers to buyers who have shown an "interest" in their listings.
 */
class Negotiation extends __1.default {
    get basePath() {
        return '/sell/negotiation/v1';
    }
    /**
     * This method evaluates a seller's current listings and returns the set of IDs that are eligible for a seller-initiated discount offer to a buyer.
     *
     * @param limit This query parameter specifies the maximum number of items to return from the result set on a page in the paginated response.
     * @param offset This query parameter specifies the number of results to skip in the result set before returning the first result in the paginated response.
     */
    findEligibleItems({ limit, offset } = {}) {
        return this.get(`/find_eligible_items`, {
            params: {
                limit,
                offset
            }
        });
    }
    /**
     * This method sends eligible buyers offers to purchase items in a listing at a discount.
     *
     * @param data The CreateOffersRequest
     */
    sendOfferToInterestedBuyers(data) {
        return this.post(`/send_offer_to_interested_buyers`, data);
    }
}
exports.default = Negotiation;
Negotiation.id = 'Negotiation';
//# sourceMappingURL=index.js.map