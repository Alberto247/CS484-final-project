import { AxiosInstance, AxiosRequestConfig } from 'axios';
export declare const defaultGlobalHeaders: {
    'Access-Control-Allow-Origin': string;
    'Access-Control-Allow-Headers': string;
    'Access-Control-Allow-Methods': string;
};
export declare const multipartHeader: {
    'Content-Type': string;
};
export interface IEBayApiRequest<T = AxiosInstance> {
    readonly instance: T;
    get<R = any, C = any>(url: string, config?: C): Promise<R>;
    delete<R = any, C = any>(url: string, config?: C): Promise<R>;
    post<R = any, C = any>(url: string, data?: any, config?: C): Promise<R>;
    postForm<R = any, C = any>(url: string, data?: any, config?: C): Promise<R>;
    put<R = any, C = any>(url: string, data?: any, config?: C): Promise<R>;
}
export declare class AxiosRequest implements IEBayApiRequest {
    readonly instance: AxiosInstance;
    constructor(config?: AxiosRequestConfig);
    get<R = any>(url: string, config?: AxiosRequestConfig): Promise<R>;
    post<R = any>(url: string, payload?: any, config?: AxiosRequestConfig): Promise<R>;
    delete<R = any>(url: string, config?: AxiosRequestConfig): Promise<R>;
    put<R = any>(url: string, payload?: any, config?: AxiosRequestConfig): Promise<R>;
    postForm<R = any>(url: string, payload?: any, config?: AxiosRequestConfig): Promise<R>;
}
